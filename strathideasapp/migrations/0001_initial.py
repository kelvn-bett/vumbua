# Generated by Django 2.2.5 on 2020-01-27 08:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.CharField(max_length=2000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('forum', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ideas',
            fields=[
                ('idea', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=400)),
                ('problem_statement', models.TextField(max_length=2000)),
                ('executive_summary', models.TextField(max_length=2000)),
                ('objectives', models.TextField(max_length=2000)),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Pending', 'Pending'), ('Declined', 'Declined')], max_length=100)),
                ('limitations', models.TextField(max_length=2000)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(upload_to='idea_pics')),
                ('is_public', models.BooleanField(default=True)),
                ('approved', models.IntegerField(default=0)),
                ('denied', models.IntegerField(default=0)),
                ('total', models.IntegerField(default=0)),
                ('votes', models.IntegerField(default=0)),
                ('voted_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Industry_category',
            fields=[
                ('industry_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('industry_category_name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=100)),
                ('image', models.ImageField(default='default.jpg', upload_to='cat_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Industry_request_category',
            fields=[
                ('industry_request_cat', models.AutoField(primary_key=True, serialize=False)),
                ('industry_request_cat_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=10)),
                ('category', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=12)),
                ('image', models.ImageField(default='default.jpg', upload_to='profile_pics')),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('has_voted', models.BooleanField(default=False)),
                ('role', models.ForeignKey(default=4, on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Roles')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Ideas')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OpinionPolls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_reply', models.CharField(max_length=200)),
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Comments')),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Ideas')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('interest', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Ideas')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Industry_request',
            fields=[
                ('industry_request', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.IntegerField()),
                ('description', models.TextField()),
                ('duration', models.IntegerField()),
                ('document', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Industry_category')),
                ('industry_request_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Industry_request_category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Industry_committee',
            fields=[
                ('committee', models.AutoField(primary_key=True, serialize=False)),
                ('committee_name', models.CharField(max_length=30)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Comments')),
                ('industry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Industry_category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Incubator',
            fields=[
                ('incubator', models.AutoField(primary_key=True, serialize=False)),
                ('incubator_name', models.CharField(max_length=30)),
                ('incubator_description', models.CharField(max_length=120)),
                ('incubator_expertise', models.CharField(max_length=100)),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Ideas')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Incubatees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Ideas')),
                ('incubator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Incubator')),
            ],
        ),
        migrations.AddField(
            model_name='ideas',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Industry_category'),
        ),
        migrations.AddField(
            model_name='ideas',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='idea_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ideas',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to='strathideasapp.Profile'),
        ),
        migrations.CreateModel(
            name='ForumView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Forum')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumComments',
            fields=[
                ('comment', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='strathideasapp.Forum')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='strathideasapp.ForumComments')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.AddField(
            model_name='forum',
            name='idea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Ideas'),
        ),
        migrations.AddField(
            model_name='forum',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=40)),
                ('description', models.CharField(max_length=120)),
                ('interested_department', models.CharField(max_length=40)),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='strathideasapp.Industry_category')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='idea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='strathideasapp.Ideas'),
        ),
        migrations.AddField(
            model_name='comments',
            name='reply',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='strathideasapp.Comments'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
